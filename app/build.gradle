plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

def versionMajor = 1001
def versionMinor = 0
def versionPatch = 0

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.pstorli.wackymole"
        minSdk 24
        targetSdk 31
        versionCode (versionMajor * 10000 + versionMinor * 100 + versionPatch)
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Recycler view
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    // Shared prefs
    implementation "androidx.security:security-crypto-ktx:1.1.0-alpha03"

    // Kotlin Coroutines - For making non-blocking (main thread) network requests.
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1"

    // View Model Scope is used when we only want co-routines to exist if view model also exists.
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1"
}